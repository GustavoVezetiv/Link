import { Text, TouchableOpacity, View, ScrollView } from "react-native";
import { styles } from "./styles";
import { MaterialIcons } from "@expo/vector-icons";
import { colors } from "@/styles/colors";
import { router } from "expo-router";

export default function Withme() {
  return (
    <View style={styles.container}>
      <View style={styles.header}>
        <TouchableOpacity onPress={() => router.back()}>
          <MaterialIcons name="arrow-back" size={32} color={colors.gray[200]} />
        </TouchableOpacity>

        <Text style={styles.title}>Desafios Enfrentados</Text>
      </View>

      <ScrollView 
        contentContainerStyle={styles.scrollContainer} 
        showsVerticalScrollIndicator={false}
      >

        <Text style={styles.paragraph}>
          <Text style={styles.highlight}>1. A Tela Branca e os √çcones Invis√≠veis:</Text> No in√≠cio, o app nem chegava a renderizar. Uma simples tela branca e √≠cones sumidos foram o ponto de partida. A causa? Fontes n√£o carregadas corretamente no `_layout.tsx`. Esse obst√°culo me for√ßou a entender profundamente o ciclo de vida do Expo e a import√¢ncia da inicializa√ß√£o correta.
        </Text>

        <Text style={styles.paragraph}>
          <Text style={styles.highlight}>2. A Comunica√ß√£o Entre Componentes:</Text> Passei por momentos em que propriedades como `onPress` e `onChange` causavam erros confusos. Ao estruturar os componentes de forma reutiliz√°vel e padronizar a comunica√ß√£o entre eles, tudo come√ßou a fazer sentido. Foi a√≠ que o entendimento real sobre "comunica√ß√£o entre pai e filho" se consolidou.
        </Text>

        <Text style={styles.paragraph}>
          <Text style={styles.highlight}>3. O Erro de Rede que Testou a Paci√™ncia:</Text> Um dos momentos mais frustrantes foi quando a API simplesmente n√£o respondia. Horas tentando resolver algo que parecia estar certo no c√≥digo... at√© perceber que o problema estava fora dele. Era o **firewall do sistema bloqueando a porta da API**. A partir da√≠, aprendi a import√¢ncia de considerar tamb√©m o ambiente de execu√ß√£o e n√£o apenas o c√≥digo em si.
        </Text>

        <Text style={styles.sectionTitle}>Aprendizados</Text>

        <Text style={styles.paragraph}>
          Cada bug, cada erro de tipagem, cada comportamento inesperado foi uma oportunidade de aprender. N√£o foi apenas sobre escrever c√≥digo, mas sobre entender o motivo das coisas, melhorar a l√≥gica e organizar melhor as ideias. Foi um projeto que exigiu aten√ß√£o aos detalhes, paci√™ncia e vontade de resolver o que parecia imposs√≠vel no come√ßo.
        </Text>

        <Text style={styles.finalMessage}>
          Esse app n√£o √© s√≥ funcional ‚Äî ele carrega a hist√≥ria de algu√©m que foi at√© o fim, por conta pr√≥pria. üöÄ
        </Text>
      </ScrollView>
    </View>
  );
}
